services:

  infinity-server:
    image: michaelf34/infinity:latest
    container_name: infinity-rag
    pull_policy: if_not_present
    restart: unless-stopped
    ports:
      - 7997:7997
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:7997/health" ]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 60s
    environment:
      - INFINITY_MODEL_ID=${EMBEDDING_MODEL_NAME};${RERANKING_MODEL_NAME}
    command: v2
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: [ gpu ]
    profiles:
      - infinity

  ollama-server:
    image: ollama/ollama:0.3.4
    container_name: ollama-rag
    pull_policy: if_not_present
    restart: unless-stopped
    ports:
      - 11434:11434
    healthcheck:
      test: [ "CMD", "ollama", "list" ]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 60s
    environment:
      - OLLAMA_KEEP_ALIVE=24h
      - OLLAMA_HOST=0.0.0.0
      - OLLAMA_PORT=11434
      - OLLAMA_FLASH_ATTENTION=1
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: [ gpu ]
    profiles:
      - ollama

  pgvecto-rs:
    image: tensorchord/pgvecto-rs:pg16-v0.2.0
    container_name: pgvecto-rs-rag
    pull_policy: if_not_present
    restart: unless-stopped
    environment:
      PGUSER: ${PGVECTOR_PGUSER:-postgres}
      POSTGRES_PASSWORD: ${PGVECTOR_POSTGRES_PASSWORD:-feras123456}
      POSTGRES_DB: ${PGVECTOR_POSTGRES_DB:-feras}
      PGDATA: ${PGVECTOR_PGDATA:-/var/lib/postgresql/data/pgdata}
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 60s
    ports:
      - "${PGVECTOR_PORT:-5432}:${PGVECTOR_PORT:-5432}"
    profiles:
      - pgvector

  neo4j:
    image: neo4j:5.22.0
    container_name: neo4j-rag
    pull_policy: if_not_present
    restart: unless-stopped
    ports:
      - 7687:7687
      - 7474:7474
    environment:
      NEO4J_AUTH: ${NEO4J_USERNAME-neo4j}/${NEO4J_PASSWORD-password}
      NEO4J_db_tx__log_rotation_retention__policy: false
      NEO4J_dbms_security_procedures_unrestricted: apoc.*
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "wget --no-verbose --tries=1 --spider localhost:7474 || exit 1"
        ]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 60s
    profiles:
      - neo4j
